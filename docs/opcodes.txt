

;***************************************************************************
;                         命令表
;***************************************************************************

LDA  ... Aレジスタにロードする
LDX  ... Xレジスタにロードする
LDY  ... Yレジスタにロードする
STA  ... Aレジスタをストアする
STX  ... Xレジスタをストアする
STY  ... Yレジスタをストアする

TXA  ... XレジスタをAレジスタにコピーする
TYA  ... YレジスタをAレジスタにコピーする
TXS  ... XレジスタをSレジスタにコピーする
TAY  ... AレジスタをYレジスタにコピーする
TAX  ... AレジスタをXレジスタにコピーする
TSX  ... SレジスタをXレジスタにコピーする

PHP  ... フラグをプッシュする
PLP  ... フラグをポップする
PHA  ... Aレジスタをプッシュする
PLA  ... Aレジスタをポップする

ADC  ... Aレジスタに加算する
SBC  ... Aレジスタから減算する
CMP  ... Aレジスタと比較する
CPX  ... Xレジスタと比較する
CPY  ... Yレジスタと比較する

AND  ... AレジスタとAND演算をする
EOR  ... AレジスタとEX-OR演算をする
ORA  ... AレジスタとOR演算をする
BIT  ... AレジスタとAND比較をする

ASL  ... 左シフト
LSR  ... 右シフト
ROL  ... 左ローテイト
ROR  ... 右ローテイト

INC  ... 1を加算する
INX  ... Xレジスタに1を加算する
INY  ... Yレジスタに1を加算する
DEC  ... 1を減算する
DEX  ... Xレジスタから1を減算する
DEY  ... Yレジスタから1を減算する

CLC  ... Cフラグをクリア
CLI  ... Iフラグをクリア
CLV  ... Vフラグをクリア
CLD  ... Dフラグをクリア
SEC  ... Cフラグをセット
SEI  ... Iフラグをセット
SED  ... Dフラグをセット

NOP  ... 何もしない
BRK  ... ソフトウエア割り込み

JMP  ... ジャンプ
JSR  ... サブルーチン呼び出し
RTS  ... サブルーチンから復帰
RTI  ... 割り込み処理から復帰



;***************************************************************************
;                   アドレッシングモード
;***************************************************************************

   none  ... なし。命令単体。
              例)  TXA
                   A ← X

    imm  ... 直値。指定された値をそのまま使用。
              例)  LDA  #20h
                   A ← 20h

   zero  ... ゼロページ。指定された8bitアドレスを用いて0000h〜00FFhをアク
             セスする。absより高速だが範囲が狭い。
              例)  LDA  $20h
                   A ← (0020h)

    abs  ... 絶対番地。指定された16bitアドレスをアクセスする。
              例)  LDA  8123h
                   A ← (8123h)

  zerox  ... ゼロページX。指定された8bitアドレスにXレジスタの内容を加算し
             たアドレスにアクセスする。
              例)  LDA  $20h,X
                   A ← (0020h + X)

  zeroy  ... ゼロページY。指定された8bitアドレスにYレジスタの内容を加算し
             たアドレスにアクセスする。
              例)  LDX  $20h,Y
                   X ← (0020h + Y)

   absx  ... 絶対番地X。指定された16bitアドレスにXレジスタの内容を加算した
             アドレスにアクセスする。
              例)  LDA  8123h,X
                   A ← (8123h + X)

   absy  ... 絶対番地X。指定された16bitアドレスにYレジスタの内容を加算した
             アドレスにアクセスする。
              例)  LDA  8123h,Y
                   A ← (8123h + Y)

   indx  ... インダイレクトX。指定された8bitアドレスにXレジスタの内容を加
             算したアドレスから2バイトを読み出し、その値を16bitアドレスと
             してアクセスする。
              例)  LDA  (20h,X)
                   A ← ( (0020h + X) )

   indy  ... インダイレクトY。指定された8bitのアドレスから2バイトを読み出
             し、その値にYレジスタの内容を加算して16bitアドレスとしてアク
             セスする。
              例)  LDA  (20h),Y
                   A ← ( (0020h) + Y )



;***************************************************************************
;                         コード表
;***************************************************************************

      none    imm   zero    abs  zerox  zeroy   absx   absy   indx   indy

LDA    ___   0xa9   0xa5   0xad   0xb5    ___   0xbd   0xb9   0xa1   0xb1
LDX    ___   0xa2   0xa6   0xae    ___   0xb6    ___   0xbe    ___    ___
LDY    ___   0xa0   0xa4   0xac   0xb4    ___   0xbc    ___    ___    ___
STA    ___    ___   0x85   0x8d   0x95    ___   0x9d   0x99   0x81   0x91
STX    ___    ___   0x86   0x8e    ___   0x96    ___    ___    ___    ___
STY    ___    ___   0x84   0x8c   0x94    ___    ___    ___    ___    ___

TXA   0x8a    ___    ___    ___    ___    ___    ___    ___    ___    ___
TYA   0x98    ___    ___    ___    ___    ___    ___    ___    ___    ___
TXS   0x9a    ___    ___    ___    ___    ___    ___    ___    ___    ___
TAY   0xa8    ___    ___    ___    ___    ___    ___    ___    ___    ___
TAX   0xaa    ___    ___    ___    ___    ___    ___    ___    ___    ___
TSX   0xba    ___    ___    ___    ___    ___    ___    ___    ___    ___

PHP   0x08    ___    ___    ___    ___    ___    ___    ___    ___    ___
PLP   0x28    ___    ___    ___    ___    ___    ___    ___    ___    ___
PHA   0x48    ___    ___    ___    ___    ___    ___    ___    ___    ___
PLA   0x68    ___    ___    ___    ___    ___    ___    ___    ___    ___

ADC    ___   0x69   0x65   0x6d   0x75    ___   0x7d   0x79   0x61   0x71
SBC    ___   0xe9   0xe5   0xed   0xf5    ___   0xfd   0xf9   0xe1   0xf1
CPX    ___   0xe0   0xe4   0xec    ___    ___    ___    ___    ___    ___
CPY    ___   0xc0   0xc4   0xcc    ___    ___    ___    ___    ___    ___
CMP    ___   0xc9   0xc5   0xcd   0xd5    ___   0xdd   0xd9   0xc1   0xd1

AND    ___   0x29   0x25   0x2d   0x35    ___   0x3d   0x39   0x21   0x31
EOR    ___   0x49   0x45   0x4d   0x55    ___   0x5d   0x59   0x41   0x51
ORA    ___   0x09   0x05   0x0d   0x15    ___   0x1d   0x19   0x01   0x11
BIT    ___    ___   0x24   0x2c    ___    ___    ___    ___    ___    ___

ASL   0x0a    ___   0x06   0x0e   0x16    ___   0x1e    ___    ___    ___
LSR   0x4a    ___   0x46   0x4e   0x56    ___   0x5e    ___    ___    ___
ROL   0x2a    ___   0x26   0x2e   0x36    ___   0x3e    ___    ___    ___
ROR   0x6a    ___   0x66   0x6e   0x76    ___   0x7e    ___    ___    ___

INX   0xe8    ___    ___    ___    ___    ___    ___    ___    ___    ___
INY   0xc8    ___    ___    ___    ___    ___    ___    ___    ___    ___
INC    ___    ___   0xe6   0xee   0xf6    ___   0xfe    ___    ___    ___
DEX   0xca    ___    ___    ___    ___    ___    ___    ___    ___    ___
DEY   0x88    ___    ___    ___    ___    ___    ___    ___    ___    ___
DEC    ___    ___   0xc6   0xce   0xd6    ___   0xde    ___    ___    ___

CLC   0x18    ___    ___    ___    ___    ___    ___    ___    ___    ___
CLI   0x58    ___    ___    ___    ___    ___    ___    ___    ___    ___
CLV   0xb8    ___    ___    ___    ___    ___    ___    ___    ___    ___
CLD   0xd8    ___    ___    ___    ___    ___    ___    ___    ___    ___
SEC   0x38    ___    ___    ___    ___    ___    ___    ___    ___    ___
SEI   0x78    ___    ___    ___    ___    ___    ___    ___    ___    ___
SED   0xf8    ___    ___    ___    ___    ___    ___    ___    ___    ___

NOP   0xea    ___    ___    ___    ___    ___    ___    ___    ___    ___
BRK   0x00    ___    ___    ___    ___    ___    ___    ___    ___    ___

JSR    ___    ___    ___   0x20    ___    ___    ___    ___    ___    ___
JMP    ___    ___    ___   0x4c    ___    ___    ___    ___    ___    ___
RTI   0x40    ___    ___    ___    ___    ___    ___    ___    ___    ___
RTS   0x60    ___    ___    ___    ___    ___    ___    ___    ___    ___


